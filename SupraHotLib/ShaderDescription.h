#pragma once
#include "Platform.h"
#include <unordered_map>
#include <vector>
#include "ShaderLibrary.h"

namespace SupraHot
{
	namespace Graphics
	{
		class ShaderDescription
		{
		public:
			// This gets generated by the ShaderParser
			std::string Name = "";
			std::string FileName = "";
			std::string Description = "";
			std::string VertexShaderPath = "";
			std::string PixelShaderPath = "";
			Shader::BRDFType BRDFType = Shader::BRDFType::None;
			std::unordered_map<std::string, std::vector<std::string>> DefinedWhen;
			std::unordered_map<std::string, std::vector<std::string>> Dependencies;
			std::unordered_map<std::string, std::string> Uniforms;

			// This map describes ShaderUniforms, which get inject programatically into the shader program.
			// This way we don't need and want to expose them to the user inside the editor.
			std::unordered_map<std::string, std::string> Inject;

			// This gets generated by the ShaderLibrary
			std::unordered_map<std::string, uint64> BitShiftedIndices;
			ShaderDescription();
			~ShaderDescription();
		};
	};
};
